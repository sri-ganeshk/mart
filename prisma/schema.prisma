// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password String
  name  String
  resetPasswordToken String?
  resetPasswordExpires DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart Cart[]
  address Address[]
  orders Orders[]
  // favourite Favourite[]
}

model Orders{
  id Int @id @default(autoincrement())
  dateOfDelivery DateTime?
  orders OrderItems[]
  order User @relation(fields: [userId],references: [id])
  userId Int
  orderStatus OrderStatus
  orderConformation Boolean @default(false)
  payment Payments
  paymentRefrenceId String
}


model OrderItems{
 id Int @id @default(autoincrement())
 Quantity Int
 orders Orders @relation(fields: [orderId],references: [id])
 orderId Int
 product Product @relation(fields: [productId],references: [id])
 productId Int
}



model Address{
  id Int @id @default(autoincrement())
  doorNumber String
  streetName String
  landMark String
  city String
  state String
  pincode Int
  user User @relation(fields: [userId],references: [id])
  userId Int
}


model Cart {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id])
  userId Int @unique
  items CartItems[]
}

model CartItems{
  id Int @id @default(autoincrement())
  cart Cart @relation(fields: [cartId],references: [id])
  cartId Int
  product Product @relation(fields: [productId],references: [id])
  productId Int
  quantity Int

  @@unique([cartId, productId])
}

model Product {
  id     Int      @id @default(autoincrement())
  name   String
  description String
  price Float
  brand  String
  stock    Int
  images   String[]
  discount Float
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
  reviews Review[]
  cart CartItems[]
  orderItems OrderItems[]
}

model Category{
  id Int @id @default(autoincrement())
  name String 
  category Product[]
}


model Review{
  id Int @id @default(autoincrement())
  comment String
  rating Float
  product Product @relation(fields: [productId],references: [id])
  productId Int
}

enum Payments {
  PENDING
  COD
  UPI
  CARDS
}
enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}